!unquoted procedure $addDataInfra($symbol)
  Boundary($symbol, "Data Infra")
!endprocedure

!unquoted procedure $addDataAccess($symbol)
  Boundary($symbol, "Data Access")
!endprocedure

!unquoted procedure $addDataProtection($symbol)
  Boundary($symbol, "Owner: Data Protection")
!endprocedure

!unquoted procedure $addEngHorizontals($symbol)
  Boundary($symbol, "Data Infra")
!endprocedure

!unquoted procedure $addInfoSec($symbol)
  Boundary($symbol, "Owner: InfoSec")
!endprocedure

!unquoted procedure $addITOps($symbol)
  Boundary($symbol, "Owner: IT Ops")
!endprocedure

!unquoted procedure $addIAMPolicies($symbol)
  System($symbol, "Nubank IAM", "IAM related containers such as nubank/iam-policies and AWS IAM itself")
!endprocedure

!unquoted procedure $addGovernanceOps($symbol)
  Person($symbol, "Analytics Engineering Chapter", "Wearing the 'Data Stewards' hat")
!endprocedure

!unquoted procedure $addDataConsumer($symbol)
  Person_Ext($symbol, "Nubanker", "Business Analyst, Data Scientist, Analytics Engineer, etc.")
!endprocedure

!unquoted procedure $addDecisionMakers($symbol)
  Person_Ext($symbol, "Decision Makers", "BU leadership, IT Risk, MT, etc.")
!endprocedure

!unquoted procedure $addMonitoring($symbol)
  System($symbol, "PII Exposure Monitoring", "Writes (user, ACG, platform, date) quadruples to dataset series and aggregates these data in BI dashboards.")
!endprocedure

!unquoted procedure $addItaipuRuntime($symbol)
  System($symbol, "Itaipu Runtime", "The nightly ETL run that writes data to S3.")
!endprocedure

!unquoted procedure $addOkta($symbol)
  System_Ext($symbol, "Okta", "Not considered for the initial tombinhos, but will be when we implement BigQuery.")
!endprocedure

!unquoted procedure $addDatabricks($symbol)
  System($symbol, "Databricks", "Including lambdas to manage auth{entication,orization}")
!endprocedure

!unquoted procedure $addGovMetadata($symbol)
  System($symbol, "Governance Metadata", "Includes a library that generates S3 prefixes base clearance, restriction, owner squad, etc.")
!endprocedure

!unquoted procedure $addIAM($symbol)
  System_Ext(iam, "AWS IAM")
!endprocedure

!unquoted procedure $addItaipuDatasets($symbol)
  System($symbol, "Itaipu Datasets", "Inside itaipu monorepo. Every dataset has ACG-related metadata such as clearance and restriction.")
!endprocedure

!unquoted procedure $addRequisitionSystem($symbol)
  System($symbol, "Requisition System", "Request access to ACG and interface for approvers (based on Jira).")
!endprocedure

!unquoted procedure $addSub1($itaipuDatasets, $govMeta, $dataConsumer)
  Boundary(tbdOwner, "TBD owner") {
    System(catalog, "ACG Catalog.", "Documentation. TBD, maybe Looker dashboard or CLI")
  }
  System_Ext(s3, "AWS S3")
  $addDataInfra(dataInfra) {
    $addItaipuRuntime(itaipuRuntime)
  }
  Boundary(dsProd, "DS Prod") {
      System_Ext(kubeFlow, "Kubeflow", "Already operates using personal IAM roles. No changes necessary.")
    }
  $addDataAccess(dataAccess) {
    $addDatabricks(databricks)
    System_Ext(bigQuery, "BigQuery", "Will be integrated after Databricks.")
  }

  System_Ext(sts, "AWS STS")

  Rel(dataConsumer, databricks, "Run queries")
  Rel(dataConsumer, kubeFlow, "Run queries")
  Rel(dataConsumer, bigQuery, "Run queries")
  Rel(dataConsumer, catalog, "Find the right ACGs to request access to (e.g. based on a dataset they need), and show ACGs currently associated with Nubanker")
  Rel(databricks, sts, "Get token to assume DATA account role")
  Rel(databricks, s3, "Read data")
  Rel(itaipuRuntime, s3, "Write data")
  Rel(itaipuRuntime, $itaipuDatasets, "Get queries to run")
  Rel(kubeFlow, s3, "Read data")
  Rel(itaipuRuntime, govMeta, "Library dependency: get deterministic S3 prefix for PII data assets")
!endprocedure


!unquoted procedure $addSub2($piiMonitoring, $govMeta, $itaipuDatasets, $reqSystem, $dataProtection, $dataConsumer)
  $addGovernanceOps(govOps)
  $addDecisionMakers(decMakers)

  $addInfoSec(infoSec) {
      System(maat, "'maat' Service", "Business agnostic approval system")
      $addIAMPolicies(iam)
  }

  $addITOps(itOps) {
    $addOkta(okta)
  }

  Boundary(itRisk, "IT Risk") {
  }

  Rel(dataConsumer, reqSystem, "Request access")
  Rel_Up(itRisk, govOps, "Help with building and maintaining the access matrix (using AE domain knowledge)")
  Rel_Up(maat, govOps, "Approve/deny manually if outside of access matrix or other edge case")
  Rel(piiMonitoring, iam, "Extract ACGs per user for PII exposure OKR")
  Rel(govOps, govMeta, "Add/remove clearances")

  Rel(piiMonitoring, itaipuDatasets, "Get enumerator for PII OKR by counting datasets per clearance/restriction")
  Rel_Down(decMakers, piiMonitoring, "Monitor")
  Rel(reqSystem, iam, "Trigger processes that associate (automatically expiring) ACG policies to data account roles of the Nubanker in IAM")
  Rel(itRisk, reqSystem, "Maintain access matrix")
  Rel(iam, govMeta, "Build policies based on clearances")
  Rel(reqSystem, maat, "Fallback of access matrix")
  Rel(dataProtection, itOps, "Ask for help with Jira")
!endprocedure
